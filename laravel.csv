Front,Back  
HTML5,"The latest version of HTML, supports semantic tags (<header>, <section>, etc.)."  
CSS3,"Modern CSS with features like Flexbox, Grid, and animations."  
JavaScript ES6+,"JavaScript version with let/const, arrow functions, promises, async/await."  
PHP OOP,"Object-Oriented PHP: Classes, Inheritance, Traits, Interfaces."  
Composer,"PHP dependency manager (install packages like `laravel/framework`)."  
Laravel Installation,"Use: `composer create-project laravel/laravel project-name`."  
Blade Templating,"Laravel’s templating engine with `@if`, `@foreach`, `@extends`."  
Eloquent ORM,"Laravel’s ActiveRecord ORM. Example: `User::where('active', 1)->get()`."  
Migrations,"Create/modify DB tables: `php artisan make:migration create_table_name`."  
Eloquent Relationships,"One-to-One, One-to-Many, Many-to-Many, Has-Many-Through."  
Laravel Breeze,"Simple auth scaffolding (login, registration, password reset)."  
Laravel Sanctum,"Lightweight API authentication for SPAs/mobile apps."  
RESTful API,"API design using HTTP methods: GET (read), POST (create), PUT/PATCH (update), DELETE."  
API Resources,"Transform Eloquent models into JSON responses (e.g., `UserResource`)."  
PHPUnit,"Laravel’s built-in testing tool. Example: `$this->assertTrue(true)`."  
Redis,"In-memory data store for caching, queues, and sessions."  
Eager Loading,"Prevents N+1 queries: `Post::with('comments')->get()`."  
Queues,"Defer time-consuming tasks: `php artisan queue:work`."  
Polymorphic Relations,"A model can belong to multiple other models (e.g., `Comment` on `Post` or `Video`)."  
Service Container,"Laravel’s dependency injection system. Example: `app()->make()`."  
Vue.js,"Frontend framework often used with Laravel (options: React, Livewire)."  
Inertia.js,"Bridge between Laravel + Vue/React (no API needed)."  
Livewire,"Build dynamic interfaces with PHP (no direct JS needed)."  
Git Flow,"Branching strategy: `main`, `develop`, `feature/xxx`, `hotfix`."  
Laravel Forge,"Server management tool for deploying Laravel apps."  
Laravel Vapor,"Serverless deployment for Laravel (AWS Lambda)."  
Telescope,"Debugging tool for Laravel apps (`/telescope`)."  
SOLID Principles,"OOP design principles: Single Responsibility, Open/Closed, etc."  
Repository Pattern,"Abstracts DB logic into reusable classes."  
Laravel Packages,"Example: Spatie’s `laravel-permission` for roles/permissions."  