Front,Back
PHP Tags,"<?php ?>, <?= ?> (short echo), <? ?> (short tag, not recommended)"
Comments,"// Single-line, # Single-line, /* Multi-line */, /** Docblock */"
Variables,"Start with $, case-sensitive (e.g., $name = 'John';)"
Data Types,"Scalar: int, float, string, bool; Compound: array, object; Special: null, resource"
Type Juggling,"Automatic type conversion (e.g., '5' + 2 = 7)"
Type Casting,"(int), (float), (string), (array), (object), (bool) (e.g., (int)'42')"
Strings,"Single-quoted (literal), double-quoted (parse vars), heredoc/nowdoc"
String Functions,"strlen(), substr(), strpos(), str_replace(), trim(), explode(), implode()"
Arrays,"Indexed: $arr = [1,2,3]; Associative: $arr = ['key'=>'value'];"
Array Functions,"count(), array_push(), array_pop(), array_merge(), array_keys(), in_array()"
Constants,"define('CONSTANT', value) or const (class constants)"
Operators,"Arithmetic: + - * / % **; Comparison: == === != !== <> <=>; Logical: && || ! and or xor"
Control Structures,"if, else, elseif, switch, match (PHP 8.0+), ternary ?:"
Loops,"for, foreach, while, do-while, break/continue"
Functions,"function name($param) { return; } Default args: function foo($param = 'default')"
Variable Scope,"Global (needs global keyword), local, static (persists between calls)"
Anonymous Functions,"$func = function($param) { }; Arrow functions: fn($x) => $x * 2 (PHP 7.4+)"
Type Declarations,"function foo(int $param): void {} (scalar types since PHP 7.0)"
Strict Types,"declare(strict_types=1); (enforces exact type matching)"
Error Handling,"try/catch/finally, throw new Exception(), set_error_handler()"
Error Reporting,"error_reporting(E_ALL), ini_set('display_errors', 1)"
Include/Require,"include, include_once, require, require_once (difference in failure behavior)"
Superglobals,"$_GET, $_POST, $_REQUEST, $_SERVER, $_SESSION, $_COOKIE, $_FILES, $_ENV"
Forms Handling,"$_POST['field'], htmlspecialchars() for XSS protection"
File Uploads,"$_FILES['file']['tmp_name'], move_uploaded_file(), is_uploaded_file()"
Cookies,"setcookie(name, value, expire), $_COOKIE, headers_sent() check"
Sessions,"session_start(), $_SESSION, session_destroy(), session_regenerate_id()"
OOP Basics,"class, new, ->, ::, $this, public/protected/private"
Constructor,"__construct(), promoted properties (PHP 8.0): public function __construct(public $prop) {}"
Destructor,"__destruct() (called when object is destroyed)"
Inheritance,"extends, parent::, final classes/methods"
Interfaces,"interface, implements (all methods must be public)"
Traits,"trait, use (horizontal code reuse)"
Abstract Classes,"abstract class (can't be instantiated), abstract methods"
Magic Methods,"__get(), __set(), __call(), __toString(), __invoke(), __clone()"
Autoloading,"spl_autoload_register(), PSR-4 autoloading standard"
Namespaces,"namespace App\Model; use App\Model\Class;"
Composer,"PHP dependency manager (composer.json, autoloading, packages)"
PDO,"$pdo = new PDO(dsn, user, pass); $stmt = $pdo->prepare(query); $stmt->execute()"
Prepared Statements,"Prevents SQL injection: $stmt->bindParam(), $stmt->execute([params])"
MySQLi,"Procedural: mysqli_connect(); OOP: $mysqli = new mysqli()"
Database Security,"Always use prepared statements, never concatenate user input"
JSON,"json_encode(), json_decode(), JSON_THROW_ON_ERROR (PHP 7.3+)"
Date/Time,"DateTime(), DateTimeZone(), DateInterval(), format() methods"
Exceptions,"Built-in: Exception, RuntimeException; Custom exceptions"
Generators,"yield (memory-efficient iteration)"
SPL,"Standard PHP Library: SplFileInfo, SplFixedArray, etc."
Password Hashing,"password_hash(), password_verify(), PASSWORD_DEFAULT/BCRYPT"
CSRF Protection,"Generate/validate tokens with random_bytes() or bin2hex(openssl_random_pseudo_bytes())"
Headers,"header(), headers_list(), header_remove()"
Output Buffering,"ob_start(), ob_get_contents(), ob_end_clean()"
Performance,"OPcache, APCu, avoid excessive I/O, lazy loading"
PSR Standards,"PSR-1 (Basic Coding), PSR-4 (Autoloading), PSR-12 (Coding Style)"
PHP.ini,"Important settings: memory_limit, upload_max_filesize, post_max_size"
PHP CLI,"php -a (interactive shell), php -S localhost:8000 (built-in server)"
Composer CLI,"composer install, composer update, composer dump-autoload"
Debugging,"var_dump(), debug_backtrace(), xdebug, var_export()"
PHP 8.0+ Features,"Named args, attributes, union types, match expression, nullsafe operator (?->)"
PHP 8.1+ Features,"Enums, fibers, readonly properties, first-class callable syntax"
PHP 8.2+ Features,"Readonly classes, standalone types (null/false), sensitive parameter redaction"
Security Best Practices,"Validate input, escape output, use HTTPS, secure sessions, disable eval()"
Testing,"PHPUnit, Pest, mocking with Mockery"
Frameworks,"Laravel, Symfony, CodeIgniter, Slim (microframework)"
CMS Platforms,"WordPress, Drupal, Magento (e-commerce)"