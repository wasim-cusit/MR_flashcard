Front,Back
What is Vue.js?,"Progressive JavaScript framework for building UIs (created by Evan You)"
Vue 2 vs Vue 3,"Vue 3: Composition API, multiple root elements, Teleport, faster reactivity"
Installation (CDN),"<script src='https://unpkg.com/vue@3/dist/vue.global.js'></script>"
Installation (CLI),"npm install -g @vue/cli; vue create project-name (for Vue 3)"
Vue Instance,"const app = Vue.createApp({...}) (Vue 3) / new Vue({...}) (Vue 2)"
Mounting,"app.mount('#app') - Attaches Vue instance to DOM element"
Template Syntax,"{{ data }} - Text interpolation; v- directives for dynamic behavior"
Directives,"v-if, v-for, v-bind, v-on, v-model, v-show, v-html, v-slot"
v-bind Shorthand,":attribute (e.g., :class='{active: isActive}')"
v-on Shorthand,"@event (e.g., @click='handleClick')"
Conditional Rendering,"v-if / v-else-if / v-else (removes nodes), v-show (toggles display)"
List Rendering,"v-for='(item, index) in items' :key='uniqueId' (always use key)"
Event Handling,"@click='handler' or @click='handler($event, param)'"
Event Modifiers,"@click.stop, @submit.prevent, @keyup.enter - Chainable helpers"
v-model,"Two-way binding for form inputs (text, checkbox, select etc.)"
v-model Modifiers,"v-model.lazy (on change), .number (cast to number), .trim"
Computed Properties,"computed: { fullName() { return this.first + ' ' + this.last } } - Cached"
Methods,"methods: { doSomething() {} } - Called on every render"
Watchers,"watch: { value(newVal, oldVal) {} } - React to specific changes"
Lifecycle Hooks,"beforeCreate, created, beforeMount, mounted, beforeUpdate, updated, beforeUnmount, unmounted"
Components,"app.component('comp-name', { template: `...`, props: [...] })"
Props,"props: ['title'] or { title: { type: String, required: true }} - Parent → child"
Custom Events,"this.$emit('event-name', data) - Child → parent communication"
Slots,"<slot></slot> - Content distribution; named slots with <template v-slot:name>"
Scoped Slots,"<slot :item='item'> - Pass data to slot content"
Dynamic Components,"<component :is='currentComponent'> - Switch components dynamically"
Keep-alive,"<keep-alive> - Cache inactive component instances"
Teleport,"<teleport to='body'> - Render content outside component hierarchy"
Composition API (Vue 3),"setup() function with ref(), reactive(), computed(), watch()"
ref() vs reactive(),"ref: primitive values (auto-unwrap in templates); reactive: objects"
Composition API Lifecycle,"onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUnmounted"
Provide/Inject,"provide() in parent, inject() in child - Multi-level prop passing"
Vue Router,"npm install vue-router; createRouter({ history: createWebHistory(), routes })"
Router Links,"<router-link to='/path'> - SPA navigation with history"
Route Params,"{ path: '/user/:id', component: User } → this.$route.params.id"
Route Guards,"beforeEach, beforeRouteEnter - Control navigation"
State Management (Pinia),"npm install pinia; defineStore() - Recommended for Vue 3"
State Management (Vuex),"npm install vuex; new Vuex.Store({ state, mutations, actions, getters })"
Actions vs Mutations,"Mutations: sync state changes; Actions: async operations + commit mutations"
Getters,"Computed properties for store: getters: { filteredItems() { return ... } }"
Vite for Vue,"npm create vite@latest; select Vue - Faster dev server than webpack"
Single File Components (SFCs),"<template>, <script>, <style> in .vue files (requires build step)"
Scoped Styles,"<style scoped> - CSS limited to component"
CSS Modules,"<style module> - $style object in templates"
Custom Directives,"app.directive('focus', { mounted(el) { el.focus() } }) - v-focus"
Plugins,"app.use(plugin) - Global functionality (router, store, etc.)"
Mixins (Vue 2),"Shared component options (being replaced by Composition API)"
Render Functions,"render() { return h('div', {}, ...) } - Programmatic templates"
JSX in Vue,"Enable with @vue/babel-plugin-jsx - Alternative to templates"
Transition Component,"<transition name='fade'> - Animate element entering/leaving"
Transition Classes,".fade-enter-active, .fade-leave-to - Hook into transition phases"
Dynamic CSS,":style='{ color: activeColor }' and :class='{ active: isActive }'"
Error Handling,"errorCaptured lifecycle hook or app.config.errorHandler"
Global Properties,"app.config.globalProperties.$myGlobal = value - Accessible in all components"
Custom Events API,"const emit = defineEmits(['event']) - Type-safe events in Composition API"
Suspense (Vue 3),"<Suspense> - Handle async components with fallback content"
Reactivity Fundamentals,"Vue 3 uses Proxy-based reactivity (vs defineProperty in Vue 2)"
Performance Tips,"v-once, v-memo, shallowRef - Optimize rendering"
Testing,"@vue/test-utils - Official testing library"
DevTools,"Browser extension for debugging Vue applications"
Server-Side Rendering,"Nuxt.js - Framework for SSR/Vue applications"
Static Site Generation,"VuePress, VitePress - Documentation-focused SSG"